// src/styles/_base.scss
@use 'variables' as vars;
@use 'mixins' as mixins;

// Basic CSS Reset (optional, but good for consistency)
*, *::before, *::after {
  box-sizing: border-box;
  margin: 0;
  padding: 0;
}

html {
  font-size: 16px; // Base for rem units
}

body {
  @include mixins.apply-theme-colors(light);
  font-family: vars.$font-family-base;
  font-size: vars.$font-size-base;
  line-height: 1.5;
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
  transition: color 0.4s ease-in, background-color 0.4s ease-in; // Ensure this line is present
}

body.dark-mode {
  @include mixins.apply-theme-colors(dark);
}


h1, h2, h3, h4, h5, h6 {
  margin-top: 0;
  margin-bottom: vars.$spacing-md;
  font-weight: vars.$font-weight-bold;
  color: var(--color-dark); // Use CSS variable
}

h1 { 
  @include mixins.responsive-property(font-size, (
    sm: vars.$font-size-h1 * 0.9,
    md: vars.$font-size-h1,
    lg: vars.$font-size-h1 * 1.1,
    )
  );
}
h2 { 
  @include mixins.responsive-property(font-size, (
    sm: vars.$font-size-h2 * 0.9,
    md: vars.$font-size-h2,
    lg: vars.$font-size-h2 * 1.1,
    )
  );
}
h3 { 
  @include mixins.responsive-property(font-size, (
    sm: vars.$font-size-h3 * 0.9,
    md: vars.$font-size-h3,
    lg: vars.$font-size-h3 * 1.1,
    )
  );
}

p {
  margin-bottom: vars.$spacing-sm;
}

a {
  color: var(--color-primary); // Use CSS variable
  text-decoration: none;

  &:hover {
    text-decoration: underline;
  }
}

button {
  @include mixins.button-style(); // Use the mixin
}

input[type="text"] {
  padding: vars.$spacing-sm vars.$spacing-md;
  border: 1px solid var(--color-border);
  border-radius: vars.$border-radius;
  font-size: vars.$font-size-base;
  color: var(--color-text);
  background-color: var(--color-light);

  transition: color 0.4s ease-in, background-color 0.4s ease-in, border-color 0.4s ease-in; // Ensure this line is present

  &:focus {
    outline: none;
    border-color: var(--color-primary);
    box-shadow: vars.$box-shadow-sm;
  }
}

strong {
  font-weight: vars.$font-weight-bold; // Ensure bold works with your chosen font
}
